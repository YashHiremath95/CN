#include<stdio.h> 
struct rtable 
{ 
int dist[20],nextnode[20]; 
}table[20];
int cost[10][10],n; 
void distvector() 
{ 
int i,j,k,count=0; 
for(i=0;i<n;i++) 
{ 
for(j=0;j<n;j++) 
{ 
table[i].dist[j]=cost[i][j]; 
table[i].nextnode[j]=j; 
} } 
do 
{ 
count=0; 
for(i=0;i<n;i++) 
{ 
for(j=0;j<n;j++) 
{ 
for(k=0;k<n;k++) 
{ 
if(table[i].dist[j]>cost[i][k]+table[k].dist[j]) 
{ 
table[i].dist[j]=table[i].dist[k]+table[k].dist[j]; 
table[i].nextnode[j]=k; 
count++; 
} 
} 
} 
} 
}while(count!=0); 
} 
int main() 
{ 
int i,j; 
printf("\nenter the no of vertices:\t"); 
scanf("%d",&n);
printf("\nenter the cost matrix\n"); 
for(i=0;i<n;i++) 
for(j=0;j<n;j++) 
scanf("%d",&cost[i][j]); 
distvector(); 
for(i=0;i<n;i++) 
{ 
printf("\nstate value for router %c \n",i+65);
printf("\ndestnode\tnextnode\tdistance\n"); 
for(j=0;j<n;j++) 
{ 
if(table[i].dist[j]==99) 
printf("%c\t\t-\t\t infinite\n",j+65); 
else 
printf("%c\t\t%c\t\t%d\n",j+65,table[i].nextnode[j]+65,table[i].dist[j]); 
} 
} 
return 0; 
}


output
enter the no of vertices:    4
enter the cost matrix:
0 2 99 6
2 0 3 8
99 3 0 5
6 8 5 0

state value for router A 

destnode	nextnode	distance
A		A		0
B		B		2
C		B		5
D		A		6

state value for router B 

destnode	nextnode	distance
A		A		2
B		B		0
C		C		3
D		C		8

state value for router C 

destnode	nextnode	distance
A		B		5
B		B		3
C		C		0
D		D		5

state value for router D 

destnode	nextnode	distance
A		A		6
B		B		8
C		C		5
D		D		0
